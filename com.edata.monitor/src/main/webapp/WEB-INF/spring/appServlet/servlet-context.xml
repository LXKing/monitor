<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="107374182400" />
	</beans:bean>

	<beans:bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:list>
				<beans:bean class="com.edata.monitor.util.StringToDateConverter" />
				<beans:bean class="com.edata.monitor.util.DateToStringConverter" />
				<beans:bean class="com.edata.monitor.util.StringToSqlDateConverter" />
				<beans:bean class="com.edata.monitor.util.SqlDateToStringConverter" />
				<beans:bean class="com.edata.monitor.util.StringToTimestampConverter" />
				<beans:bean class="com.edata.monitor.util.TimestampToStringConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="webObjectMapper" class="com.edata.monitor.util.WebObjectMapper" />


	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven conversion-service="conversionService">
		<message-converters>
			<beans:bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<beans:property name="objectMapper" ref="webObjectMapper"></beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="com.edata.monitor.interceptor.SecurityInterceptor">
				<beans:property name="excludedUrls">
					<beans:list>
						<beans:value>/</beans:value>
						<beans:value>/code.verify</beans:value>
						<beans:value>/locate/realtime</beans:value>
						<beans:value>(.*)/resources/(.*)</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.edata.monitor" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<beans:bean id="handlerExceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="defaultErrorView" value="forward:/error"></beans:property>
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="com.edata.monitor.interceptor.AuthorizationException">
					redirect:/
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

</beans:beans>
