<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rayton.gps.dao.lisence.DrivingLisenceDao">
    <!-- DrivingLisence的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_DrivingLisence_Map" type="com.rayton.gps.dao.lisence.DrivingLisence">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="birthdate" jdbcType="DATE" property="birthdate" />
        <result column="company_id" jdbcType="VARCHAR" property="companyId" />
        <result column="nationality" jdbcType="VARCHAR" property="nationality" />
        <result column="valid_period" jdbcType="DATE" property="validPeriod" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="doc_no" jdbcType="VARCHAR" property="docNo" />
        <result column="record" jdbcType="VARCHAR" property="record" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="car_class" jdbcType="VARCHAR" property="carClass" />
        <result column="date_of_first_issue" jdbcType="DATE" property="dateOfFirstIssue" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:driving_lisence的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="driving_lisence_Column">
        driving_lisence.id as id
        ,driving_lisence.address as address
        ,driving_lisence.birthdate as birthdate
        ,driving_lisence.company_id as company_id
        ,driving_lisence.nationality as nationality
        ,driving_lisence.valid_period as valid_period
        ,driving_lisence.sex as sex
        ,driving_lisence.doc_no as doc_no
        ,driving_lisence.record as record
        ,driving_lisence.name as name
        ,driving_lisence.car_class as car_class
        ,driving_lisence.date_of_first_issue as date_of_first_issue
    </sql>

    <!--获得类名为:DrivingLisence对应的数据库表的数据总行数 -->
    <select id="getDrivingLisenceRowCount" parameterType="com.rayton.gps.util.Assist" resultType="java.lang.Long">
        select count(id) from driving_lisence
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:DrivingLisence对应数据库中表的数据集合 -->
    <select id="selectDrivingLisence" parameterType="com.rayton.gps.util.Assist"  resultMap="result_DrivingLisence_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="driving_lisence_Column" /> 
            </otherwise>
        </choose>
        from driving_lisence
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM driving_lisence
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow,jdbcType=INTEGER},#{rowSize,jdbcType=INTEGER} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize,jdbcType=INTEGER}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=driving_lisence.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个DrivingLisence对象,以参数DrivingLisence对象中不为空的属性作为条件进行查询-->
    <select id="selectDrivingLisenceByObj" parameterType="com.rayton.gps.dao.lisence.DrivingLisence" resultMap="result_DrivingLisence_Map">
        select 
            <include refid="driving_lisence_Column" /> 
        from driving_lisence
        <where>
            <if test="dateOfFirstIssue != null "> and driving_lisence.date_of_first_issue = #{dateOfFirstIssue,jdbcType=DATE}</if>
            <if test="carClass != null "> and driving_lisence.car_class = #{carClass,jdbcType=VARCHAR}</if>
            <if test="name != null "> and driving_lisence.name = #{name,jdbcType=VARCHAR}</if>
            <if test="record != null "> and driving_lisence.record = #{record,jdbcType=VARCHAR}</if>
            <if test="docNo != null "> and driving_lisence.doc_no = #{docNo,jdbcType=VARCHAR}</if>
            <if test="sex != null "> and driving_lisence.sex = #{sex,jdbcType=VARCHAR}</if>
            <if test="validPeriod != null "> and driving_lisence.valid_period = #{validPeriod,jdbcType=DATE}</if>
            <if test="nationality != null "> and driving_lisence.nationality = #{nationality,jdbcType=VARCHAR}</if>
            <if test="companyId != null "> and driving_lisence.company_id = #{companyId,jdbcType=VARCHAR}</if>
            <if test="birthdate != null "> and driving_lisence.birthdate = #{birthdate,jdbcType=DATE}</if>
            <if test="address != null "> and driving_lisence.address = #{address,jdbcType=VARCHAR}</if>
            <if test="id != null "> and driving_lisence.id = #{id,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过DrivingLisence的id获得对应数据库中表的数据对象-->
    <select id="selectDrivingLisenceById" parameterType="java.lang.Integer" resultMap="result_DrivingLisence_Map">
        select 
            <include refid="driving_lisence_Column" /> 
        from driving_lisence
        where driving_lisence.id = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将DrivingLisence插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertDrivingLisence" parameterType="com.rayton.gps.dao.lisence.DrivingLisence">
        insert into driving_lisence(id,address,birthdate,company_id,nationality,valid_period,sex,doc_no,record,name,car_class,date_of_first_issue) 
        values(#{id,jdbcType=INTEGER},#{address,jdbcType=VARCHAR},#{birthdate,jdbcType=DATE},#{companyId,jdbcType=VARCHAR},#{nationality,jdbcType=VARCHAR},#{validPeriod,jdbcType=DATE},#{sex,jdbcType=VARCHAR},#{docNo,jdbcType=VARCHAR},#{record,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{carClass,jdbcType=VARCHAR},#{dateOfFirstIssue,jdbcType=DATE})
    </insert>

    <!-- 将DrivingLisence中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyDrivingLisence" parameterType="com.rayton.gps.dao.lisence.DrivingLisence">
        insert into driving_lisence
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="address != null">address,</if>
            <if test="birthdate != null">birthdate,</if>
            <if test="companyId != null">company_id,</if>
            <if test="nationality != null">nationality,</if>
            <if test="validPeriod != null">valid_period,</if>
            <if test="sex != null">sex,</if>
            <if test="docNo != null">doc_no,</if>
            <if test="record != null">record,</if>
            <if test="name != null">name,</if>
            <if test="carClass != null">car_class,</if>
            <if test="dateOfFirstIssue != null">date_of_first_issue,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id,jdbcType=INTEGER},</if>
            <if test="address != null"> #{address,jdbcType=VARCHAR},</if>
            <if test="birthdate != null"> #{birthdate,jdbcType=DATE},</if>
            <if test="companyId != null"> #{companyId,jdbcType=VARCHAR},</if>
            <if test="nationality != null"> #{nationality,jdbcType=VARCHAR},</if>
            <if test="validPeriod != null"> #{validPeriod,jdbcType=DATE},</if>
            <if test="sex != null"> #{sex,jdbcType=VARCHAR},</if>
            <if test="docNo != null"> #{docNo,jdbcType=VARCHAR},</if>
            <if test="record != null"> #{record,jdbcType=VARCHAR},</if>
            <if test="name != null"> #{name,jdbcType=VARCHAR},</if>
            <if test="carClass != null"> #{carClass,jdbcType=VARCHAR},</if>
            <if test="dateOfFirstIssue != null"> #{dateOfFirstIssue,jdbcType=DATE},</if>
        </trim>
    </insert>

    <!-- 将DrivingLisence批量插入到对应数据库的表中-->
    <insert id="insertDrivingLisenceByBatch" parameterType="ArrayList">
        insert into driving_lisence(id,address,birthdate,company_id,nationality,valid_period,sex,doc_no,record,name,car_class,date_of_first_issue) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id,jdbcType=INTEGER},#{item.address,jdbcType=VARCHAR},#{item.birthdate,jdbcType=DATE},#{item.companyId,jdbcType=VARCHAR},#{item.nationality,jdbcType=VARCHAR},#{item.validPeriod,jdbcType=DATE},#{item.sex,jdbcType=VARCHAR},#{item.docNo,jdbcType=VARCHAR},#{item.record,jdbcType=VARCHAR},#{item.name,jdbcType=VARCHAR},#{item.carClass,jdbcType=VARCHAR},#{item.dateOfFirstIssue,jdbcType=DATE})
        </foreach>
    </insert>

    <!-- 通过DrivingLisence的id将数据库表中对应的数据删除-->
    <delete id="deleteDrivingLisenceById" parameterType="java.lang.Integer">
        delete from driving_lisence
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过辅助工具Assist中的条件将DrivingLisence对应的数据库表的数据删除-->
    <delete id="deleteDrivingLisence" parameterType="com.rayton.gps.util.Assist">
        delete from driving_lisence
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过DrivingLisence的id将DrivingLisence的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateDrivingLisenceById" parameterType="com.rayton.gps.dao.lisence.DrivingLisence">
        update driving_lisence set
            address=#{address,jdbcType=VARCHAR}
            ,birthdate=#{birthdate,jdbcType=DATE}
            ,company_id=#{companyId,jdbcType=VARCHAR}
            ,nationality=#{nationality,jdbcType=VARCHAR}
            ,valid_period=#{validPeriod,jdbcType=DATE}
            ,sex=#{sex,jdbcType=VARCHAR}
            ,doc_no=#{docNo,jdbcType=VARCHAR}
            ,record=#{record,jdbcType=VARCHAR}
            ,name=#{name,jdbcType=VARCHAR}
            ,car_class=#{carClass,jdbcType=VARCHAR}
            ,date_of_first_issue=#{dateOfFirstIssue,jdbcType=DATE}
        where id=#{id,jdbcType=INTEGER}
    </update>

    <!-- 通过DrivingLisence的id将DrivingLisence中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDrivingLisenceById" parameterType="com.rayton.gps.dao.lisence.DrivingLisence">
        update driving_lisence
        <set>
            <if test="address != null">
                address=#{address,jdbcType=VARCHAR},
            </if>
            <if test="birthdate != null">
                birthdate=#{birthdate,jdbcType=DATE},
            </if>
            <if test="companyId != null">
                company_id=#{companyId,jdbcType=VARCHAR},
            </if>
            <if test="nationality != null">
                nationality=#{nationality,jdbcType=VARCHAR},
            </if>
            <if test="validPeriod != null">
                valid_period=#{validPeriod,jdbcType=DATE},
            </if>
            <if test="sex != null">
                sex=#{sex,jdbcType=VARCHAR},
            </if>
            <if test="docNo != null">
                doc_no=#{docNo,jdbcType=VARCHAR},
            </if>
            <if test="record != null">
                record=#{record,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name=#{name,jdbcType=VARCHAR},
            </if>
            <if test="carClass != null">
                car_class=#{carClass,jdbcType=VARCHAR},
            </if>
            <if test="dateOfFirstIssue != null">
                date_of_first_issue=#{dateOfFirstIssue,jdbcType=DATE},
            </if>
        </set>
        where id=#{id,jdbcType=INTEGER}
    </update>

    <!-- 通过辅助工具Assist中的条件将DrivingLisence中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateDrivingLisence" parameterType="map">
        update driving_lisence
        <set>
                id=#{enti.id,jdbcType=INTEGER},
                address=#{enti.address,jdbcType=VARCHAR},
                birthdate=#{enti.birthdate,jdbcType=DATE},
                company_id=#{enti.companyId,jdbcType=VARCHAR},
                nationality=#{enti.nationality,jdbcType=VARCHAR},
                valid_period=#{enti.validPeriod,jdbcType=DATE},
                sex=#{enti.sex,jdbcType=VARCHAR},
                doc_no=#{enti.docNo,jdbcType=VARCHAR},
                record=#{enti.record,jdbcType=VARCHAR},
                name=#{enti.name,jdbcType=VARCHAR},
                car_class=#{enti.carClass,jdbcType=VARCHAR},
                date_of_first_issue=#{enti.dateOfFirstIssue,jdbcType=DATE},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将DrivingLisence中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDrivingLisence" parameterType="map">
        update driving_lisence
        <set>
            <if test="enti.id != null">
                id=#{enti.id,jdbcType=INTEGER},
            </if>
            <if test="enti.address != null">
                address=#{enti.address,jdbcType=VARCHAR},
            </if>
            <if test="enti.birthdate != null">
                birthdate=#{enti.birthdate,jdbcType=DATE},
            </if>
            <if test="enti.companyId != null">
                company_id=#{enti.companyId,jdbcType=VARCHAR},
            </if>
            <if test="enti.nationality != null">
                nationality=#{enti.nationality,jdbcType=VARCHAR},
            </if>
            <if test="enti.validPeriod != null">
                valid_period=#{enti.validPeriod,jdbcType=DATE},
            </if>
            <if test="enti.sex != null">
                sex=#{enti.sex,jdbcType=VARCHAR},
            </if>
            <if test="enti.docNo != null">
                doc_no=#{enti.docNo,jdbcType=VARCHAR},
            </if>
            <if test="enti.record != null">
                record=#{enti.record,jdbcType=VARCHAR},
            </if>
            <if test="enti.name != null">
                name=#{enti.name,jdbcType=VARCHAR},
            </if>
            <if test="enti.carClass != null">
                car_class=#{enti.carClass,jdbcType=VARCHAR},
            </if>
            <if test="enti.dateOfFirstIssue != null">
                date_of_first_issue=#{enti.dateOfFirstIssue,jdbcType=DATE},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>