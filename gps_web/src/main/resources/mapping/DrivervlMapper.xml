<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rayton.gps.dao.lisence.DrivervlDao">
    <!-- Drivervl的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Drivervl_Map" type="com.rayton.gps.dao.lisence.Drivervl">
        <id column="driver_id" jdbcType="VARCHAR" property="driverId" />
        <result column="vehicle_licence_id" jdbcType="INTEGER" property="vehicleLicenceId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:driver_v_l的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="driver_v_l_Column">
        driver_v_l.driver_id as driver_id
        ,driver_v_l.vehicle_licence_id as vehicle_licence_id
    </sql>

    <!--获得类名为:Drivervl对应的数据库表的数据总行数 -->
    <select id="getDrivervlRowCount" parameterType="com.rayton.gps.util.Assist" resultType="java.lang.Long">
        select count(driver_id) from driver_v_l
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Drivervl对应数据库中表的数据集合 -->
    <select id="selectDrivervl" parameterType="com.rayton.gps.util.Assist"  resultMap="result_Drivervl_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="driver_v_l_Column" /> 
            </otherwise>
        </choose>
        from driver_v_l
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT driver_id as primary_key FROM driver_v_l
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow,jdbcType=INTEGER},#{rowSize,jdbcType=INTEGER} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize,jdbcType=INTEGER}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=driver_v_l.driver_id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Drivervl对象,以参数Drivervl对象中不为空的属性作为条件进行查询-->
    <select id="selectDrivervlByObj" parameterType="com.rayton.gps.dao.lisence.Drivervl" resultMap="result_Drivervl_Map">
        select 
            <include refid="driver_v_l_Column" /> 
        from driver_v_l
        <where>
            <if test="vehicleLicenceId != null "> and driver_v_l.vehicle_licence_id = #{vehicleLicenceId,jdbcType=INTEGER}</if>
            <if test="driverId != null "> and driver_v_l.driver_id = #{driverId,jdbcType=VARCHAR}</if>
        </where>
    </select> 

    <!-- 通过Drivervl的id获得对应数据库中表的数据对象-->
    <select id="selectDrivervlById" parameterType="java.lang.String" resultMap="result_Drivervl_Map">
        select 
            <include refid="driver_v_l_Column" /> 
        from driver_v_l
        where driver_v_l.driver_id = #{id,jdbcType=VARCHAR}
    </select> 

    <!-- 将Drivervl插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertDrivervl" parameterType="com.rayton.gps.dao.lisence.Drivervl">
        insert into driver_v_l(driver_id,vehicle_licence_id) 
        values(#{driverId,jdbcType=VARCHAR},#{vehicleLicenceId,jdbcType=INTEGER})
    </insert>

    <!-- 将Drivervl中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyDrivervl" parameterType="com.rayton.gps.dao.lisence.Drivervl">
        insert into driver_v_l
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="driverId != null">driver_id,</if>
            <if test="vehicleLicenceId != null">vehicle_licence_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="driverId != null"> #{driverId,jdbcType=VARCHAR},</if>
            <if test="vehicleLicenceId != null"> #{vehicleLicenceId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <!-- 将Drivervl批量插入到对应数据库的表中-->
    <insert id="insertDrivervlByBatch" parameterType="ArrayList">
        insert into driver_v_l(driver_id,vehicle_licence_id) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.driverId,jdbcType=VARCHAR},#{item.vehicleLicenceId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!-- 通过Drivervl的id将数据库表中对应的数据删除-->
    <delete id="deleteDrivervlById" parameterType="java.lang.String">
        delete from driver_v_l
        where driver_id = #{id,jdbcType=VARCHAR}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Drivervl对应的数据库表的数据删除-->
    <delete id="deleteDrivervl" parameterType="com.rayton.gps.util.Assist">
        delete from driver_v_l
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Drivervl的id将Drivervl的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateDrivervlById" parameterType="com.rayton.gps.dao.lisence.Drivervl">
        update driver_v_l set
            vehicle_licence_id=#{vehicleLicenceId,jdbcType=INTEGER}
        where driver_id=#{driverId,jdbcType=VARCHAR}
    </update>

    <!-- 通过Drivervl的id将Drivervl中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDrivervlById" parameterType="com.rayton.gps.dao.lisence.Drivervl">
        update driver_v_l
        <set>
            <if test="vehicleLicenceId != null">
                vehicle_licence_id=#{vehicleLicenceId,jdbcType=INTEGER},
            </if>
        </set>
        where driver_id=#{driverId,jdbcType=VARCHAR}
    </update>

    <!-- 通过辅助工具Assist中的条件将Drivervl中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateDrivervl" parameterType="map">
        update driver_v_l
        <set>
                driver_id=#{enti.driverId,jdbcType=VARCHAR},
                vehicle_licence_id=#{enti.vehicleLicenceId,jdbcType=INTEGER},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Drivervl中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDrivervl" parameterType="map">
        update driver_v_l
        <set>
            <if test="enti.driverId != null">
                driver_id=#{enti.driverId,jdbcType=VARCHAR},
            </if>
            <if test="enti.vehicleLicenceId != null">
                vehicle_licence_id=#{enti.vehicleLicenceId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>